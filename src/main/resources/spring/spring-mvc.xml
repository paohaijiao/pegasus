<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
						http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context-4.3.xsd
						http://www.springframework.org/schema/mvc
						http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd">

    <!-- 扫描包 -->
    <context:component-scan base-package="com.paohaijiao.web" />
    <import resource="applicationContext-service.xml"></import>
	<!-- 第二种方式是使用注解的方式注入，主要用在java代码中使用注解注入properties文件中相应的value值 -->
	<bean id="prop" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="locations"><!-- 这里是PropertiesFactoryBean类，它也有个locations属性，也是接收一个数组，跟上面一样 -->
			<array>
				<value>classpath:mettaRepository.properties</value>
			</array>
		</property>
		<!-- 设置编码格式 -->
		<property name="fileEncoding" value="UTF-8"></property>
	</bean>
	<context:property-placeholder location="classpath:mettaRepository.properties"/>
	 <bean id="stringHttpMessageConverter" class="org.springframework.http.converter.StringHttpMessageConverter">
	 	<property name="supportedMediaTypes"> 
	 		<list> 
	 			<value>text/plain;charset=UTF-8</value>
		 	</list>
 		</property>
	</bean>
    <!-- 视图解析器 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/" />
        <property name="suffix" value=".jsp" />
    </bean>
    <!-- 默认配置 -->
    <mvc:annotation-driven>
    	<mvc:message-converters>
			<bean class="com.paohaijiao.conf.UTF8StringHttpMessageConverter" />
		</mvc:message-converters>
    </mvc:annotation-driven>
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		  destroy-method="close">
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="maxActive" value="10" />
		<property name="minIdle" value="5" />
	</bean>
	<!--sqlSession-->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 数据库连接池 -->
		<property name="dataSource" ref="dataSource" />
		<!-- 加载mybatis的全局配置文件 -->
		<property name="configLocation" value="classpath:mybatis/mybatis-config.xml" />
		<property name="mapperLocations" value="classpath*:mapper/*.xml" />
	</bean>
	<bean class="tk.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.paohaijiao.dao" />
		<property name="properties">
			<value>
				mappers=tk.mybatis.mapper.common.Mapper
			</value>
		</property>
	</bean>




	<!-- 拦截器配置 -->
</beans>
